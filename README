== Welcome to Humongous

This application is a little experiment to see what all the fuss over mongo db is about.

== Installing MongoDB on Mac OS X

This application requires Mongo DB to be installed and running on localhost.  Thankfully
this is quite easy if you're using port (or brew).  I use port and this is what it takes:

$ sudo port install mongodb

Now, if you want to configure mongo to automatically start-up and run in the background,
it's pretty easy.  Check out the files referred to in http://gist.github.com/543411.
There's a mongod.conf file that should live in /opt/local/etc and the OS X
startup plist (org.mongodb.mongod.plist) which belongs in
Library/LaunchDaemons/org.mongodb.mongod.plist.  Then:

$ sudo launchctl load /Library/LaunchDaemons/org.mongodb.mongod.plist

Mongo should be running, check out http://localhost:28017/ to see if it is.

== Fabricated Data

There's no real good way to add new data to this application as a user, but the seed.rb
script will populate mongo with 50 inspections (the primary domain object in this
application).  It also clears out all of the existing data. :)

== Deploying to Heroku

The application will deploy to heroku and is already configured to use MongoHQ once it's
enabled:

$ heroku addons:add mongohq:free

== Benchmarking

If you're going to run any benchmarks against this application, you'll probably want to do
something like this:

$ export MONGOHQ_URL=mongodb://localhost/humongous_production 
$ RAILS_ENV=production && rake db:seed
$ unicorn -E production -c etc/unicorn.conf.rb

This populates the production database and brings up the app with all of the optimizations
you'd expect for production.

Fire up apache bench for the index page:

$ ab -c 10 -n 500 http://0.0.0.0:8080/

Repeat for one of the larger inspection's show action as well.  On my laptop:

c = 10 index 11.7 req/s
c = 10 show  27.0 req/s
c = 1  index 152.0 ms per request
c = 1  show  67.4 ms per request